generator client {
  provider = "prisma-client-js"
}

// local dev with mysql
datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

// vercel deploy with postgresql
// datasource db {
//   provider  = "postgresql"
//   url       = env("POSTGRES_PRISMA_URL") // uses connection pooling
//   directUrl = env("POSTGRES_URL_NON_POOLING") // uses a direct connection
// }

/// 以下為資料表定義
model Brand {
  id   Int    @id @default(autoincrement())
  name String @db.VarChar(50)

  @@map("brand")
}

model Color {
  id             Int    @id @default(autoincrement())
  name           String @db.VarChar(50)
  colorPaletteId Int    @map("color_palette_id")

  @@map("color")
}

model ColorPalette {
  id   Int    @id @default(autoincrement())
  name String @db.VarChar(50)

  @@map("color_palette")
}

model Image {
  id           Int    @id @default(autoincrement())
  productSkuId Int    @map("product_sku_id")
  name         String @db.VarChar(150)
  image        String @db.VarChar(300)
  sortOrder    Int    @map("sort_order")

  @@map("image")
}

model Product {
  id            Int      @id @default(autoincrement())
  name          String   @db.VarChar(100)
  brandId       Int      @map("brand_id")
  discription   String   @db.Text
  price         Int      @default(0)
  discountPrice Int?     @map("discount_price")
  createdAt     DateTime @default(now()) @map("created_at")

  @@map("product")
}

model ProductSku {
  //id 改為1-1, 1-2, 1-3 (productId-colorId)
  id        Int    @id @default(autoincrement())
  productId Int    @map("product_id")
  name      String @db.VarChar(100)
  colorId   Int    @map("color_id")
  stock     Int    @default(0)

  @@map("product_sku")
}

model Spec {
  // id        Int    @id @default(autoincrement())
  productId    Int     @id @map("product_id")
  name         String  @db.VarChar(100)
  neckPickup   String? @map("neck_pickup") @db.VarChar(100)
  middlePickup String? @map("middle_pickup") @db.VarChar(100)
  bridgePickup String? @map("bridge_pickup") @db.VarChar(100)
  controls     String? @db.VarChar(300)
  switching    String? @db.VarChar(300)

  @@map("spec")
}
